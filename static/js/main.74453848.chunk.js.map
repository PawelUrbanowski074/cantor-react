{"version":3,"sources":["Header/index.js","Clock/index.js","Fieldset/index.js","Currency/index.js","Prize/index.js","UserInput/index.js","Output/index.js","Buttons/index.js","Form/index.js","Container/index.js","Currencies/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Clock","useState","Date","myDate","setMyDate","toLocaleString","time","setTime","useEffect","weekday","day","month","hour","minute","second","clockInterval","setInterval","clearInterval","Fieldset","children","Currency","currencies","name","sellFieldset","sellCurrency","setSellCurrency","buyCurrency","setBuyCurrency","map","currency","type","value","required","checked","onChange","src","image","alt","altText","id","Prize","extraContent","UserInput","transactionAmount","setTransactionAmount","target","min","step","Output","transactionResult","Buttons","Form","onFormSubmit","onFormReset","onSubmit","onReset","Container","rate","resultText","App","setTransactionResult","calculateResult","getCurrency","getRate","toFixed","find","event","preventDefault","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74453848.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header className=\"header\">\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Clock = () => {\r\n    const [myDate, setMyDate] = useState(new Date());\r\n    const [time, setTime] = useState(myDate.toLocaleString());\r\n\r\n    useEffect(() => {\r\n        setTime(myDate.toLocaleString(\"pl\", {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\"\r\n        }));\r\n\r\n        const clockInterval = setInterval(() => {\r\n            setMyDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        }\r\n    }, [myDate])\r\n\r\n\r\n\r\n\r\n    return <div className=\"timer\">Dzisiaj jest {time}</div>\r\n};\r\n\r\nexport default Clock;","import \"./style.css\";\r\n\r\nconst Fieldset = ({ title, children }) => (\r\n    <fieldset className=\"fieldset\">\r\n        <legend className=\"fieldset__legend\">{title}</legend>\r\n        {children}\r\n    </fieldset>\r\n);\r\n\r\nexport default Fieldset;","import \"./style.css\";\r\n\r\nconst Currency = ({ currencies, name, sellFieldset, sellCurrency, setSellCurrency, buyCurrency, setBuyCurrency }) => (\r\n  <ul className=\"currency\">\r\n    {currencies.map(currency => (\r\n      <li key={currency.id} className=\"currency__item\">\r\n        <label className=\"currency__label\">\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={sellCurrency}\r\n            className=\"currency__input\"\r\n            required\r\n            checked={currency.name === (sellFieldset ? sellCurrency : buyCurrency)}\r\n            onChange={() => (sellFieldset ? setSellCurrency : setBuyCurrency)(currency.name)}\r\n          />\r\n          <span className=\"currency__radioText\">{currency.name}</span>\r\n          <img\r\n            className=\"currency__image\"\r\n            src={currency.image}\r\n            alt={currency.altText}\r\n          />\r\n        </label>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Currency;","import \"./style.css\";\r\n\r\nconst Prize = ({ title, extraContent }) => (\r\n    <label className=\"prize\">\r\n        <span className=\"prize__text\">{title}</span>\r\n        {extraContent}\r\n    </label>\r\n);\r\n\r\nexport default Prize;","import \"./style.css\";\r\n\r\nconst UserInput = ({ transactionAmount, setTransactionAmount }) => {\r\n    return (\r\n        <input\r\n            value={transactionAmount}\r\n            onChange={({ target }) => setTransactionAmount(target.value)}\r\n            className=\"cash\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            step=\"0.1\"\r\n            required\r\n        />\r\n    )\r\n};\r\n\r\nexport default UserInput;","import \"./style.css\";\r\n\r\nconst Output = ({ transactionResult }) => (\r\n    <span className=\"output\">{transactionResult}</span>\r\n);\r\n\r\nexport default Output;","import \"./style.css\";\r\n\r\nconst Buttons = () => (\r\n  <div className=\"buttons\">\r\n    <input type=\"submit\" className=\"buttons__button\" value=\"Sprzedaj!\" />\r\n    <input type=\"reset\" className=\"buttons__button\" value=\"Zresetuj formularz\" />\r\n  </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\nimport Clock from \"../Clock\";\r\nimport Fieldset from \"../Fieldset\";\r\nimport Currency from \"../Currency\";\r\nimport Prize from \"../Prize\";\r\nimport UserInput from \"../UserInput\";\r\nimport Output from \"../Output\";\r\nimport Buttons from \"../Buttons\";\r\n\r\nconst Form = ({ onFormSubmit, onFormReset, currencies, sellCurrency, setSellCurrency, buyCurrency, setBuyCurrency, transactionAmount, setTransactionAmount, transactionResult }) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            <Clock/>\r\n            <Fieldset title=\"Co sprzedajesz:\">\r\n                <Currency\r\n                    currencies={currencies}\r\n                    name=\"sell\"\r\n                    sellFieldset={true}\r\n                    sellCurrency={sellCurrency}\r\n                    setSellCurrency={setSellCurrency}\r\n                    buyCurrency={buyCurrency}\r\n                    setBuyCurrency={setBuyCurrency}\r\n                />\r\n                <Prize\r\n                    title=\"Kwota:\"\r\n                    extraContent={<UserInput transactionAmount={transactionAmount} setTransactionAmount={setTransactionAmount} />}\r\n                />\r\n            </Fieldset>\r\n            <Fieldset title=\"Co kupujesz:\">\r\n                <Currency\r\n                    currencies={currencies}\r\n                    name=\"buy\"\r\n                    sellFieldset={false}\r\n                    sellCurrency={sellCurrency}\r\n                    setSellCurrency={setSellCurrency}\r\n                    buyCurrency={buyCurrency}\r\n                    setBuyCurrency={setBuyCurrency}\r\n                />\r\n                <Prize\r\n                    title=\"Do wypłaty:\" \r\n                    extraContent={<Output transactionResult={transactionResult} />} \r\n                />\r\n            </Fieldset>\r\n            <Buttons />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","const currencies = [\r\n  {\r\n    id: 1,\r\n    name: \"Złoty\",\r\n    image: \"https://i.postimg.cc/6QY6tWdx/pln.png\",\r\n    altText: \"flaga Polski\",\r\n    rate: 1,\r\n    resultText: \"PLN\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Euro\",\r\n    image: \"https://i.postimg.cc/ht0QQq9p/euro.jpg\",\r\n    altText: \"flaga Europy\",\r\n    rate: 4.54,\r\n    resultText: \"EUR\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Dolar\",\r\n    image: \"https://i.postimg.cc/sXbMCfrD/usd.png\",\r\n    altText: \"flaga Stanów Zjednoczonych\",\r\n    rate: 3.79,\r\n    resultText: \"USD\",\r\n  },\r\n];\r\n\r\nexport default currencies;","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Container from \"./Container\";\nimport currencies from \"./Currencies\";\n\nfunction App() {\n  const [transactionAmount, setTransactionAmount] = useState(\"\");\n  const [sellCurrency, setSellCurrency] = useState(\"Euro\");\n  const [buyCurrency, setBuyCurrency] = useState(\"Złoty\");\n  const [transactionResult, setTransactionResult] = useState(\"Brak\");\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const result = calculateResult(transactionAmount, sellCurrency, buyCurrency);\n    const resultText = `${result} ${getCurrency(buyCurrency).resultText}`;\n    setTransactionResult(resultText);\n  };\n\n  const onFormReset = (event) => {\n    event.preventDefault();\n    setTransactionAmount(\"\");\n    setTransactionResult(\"Brak\");\n    setSellCurrency(\"\");\n    setBuyCurrency(\"\");\n  };\n\n  const getRate = (sellCurrency, buyCurrency) => {\n    const saleRate = getCurrency(sellCurrency).rate;\n    const buyRate = getCurrency(buyCurrency).rate;\n    return saleRate / buyRate;\n  };\n\n  const calculateResult = (transactionAmount, sellCurrency, buyCurrency) => {\n    return (transactionAmount * getRate(sellCurrency, buyCurrency)).toFixed(2);\n  };\n\n  const getCurrency = (currency) => {\n    return currencies.find(({ name }) => name === currency)\n  };\n\n  return (\n    <Container>\n      <Header title=\"Internetowy kantor walut\" />\n      <Form\n        onFormSubmit={onFormSubmit}\n        onFormReset={onFormReset}\n        currencies={currencies}\n        sellCurrency={sellCurrency}\n        setSellCurrency={setSellCurrency}\n        buyCurrency={buyCurrency}\n        setBuyCurrency={setBuyCurrency}\n        transactionAmount={transactionAmount}\n        setTransactionAmount={setTransactionAmount}\n        transactionResult={transactionResult}\n      />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
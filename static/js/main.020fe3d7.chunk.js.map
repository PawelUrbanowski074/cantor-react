{"version":3,"sources":["images/background.png","globalStyle.js","Header/styled.js","Header/index.js","Form/styled.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Fieldset/styled.js","Fieldset/index.js","Buttons/styled.js","Buttons/index.js","Date/styled.js","Date/index.js","Form/index.js","Container/styled.js","Container/index.js","App.js","useApiRates.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","color","darksLateGray","background","HeaderWrapper","styled","header","babyBlue","Header","title","FormWrapper","form","Label","label","Span","span","Select","select","white","Option","option","Cash","input","ApiStatus","div","frenchPass","Timer","parsedDate","date","toLocaleString","undefined","weekday","day","month","hour","minute","second","Clock","useState","Date","myDate","setMyDate","useEffect","clockIntervalId","setInterval","clearInterval","useCurrentDate","FieldsetWrapper","fieldset","Legend","legend","Fieldset","children","Wrapper","Button","Buttons","type","value","Paragraph","p","Form","onFormSubmit","onFormReset","sellCurrency","setSellCurrency","buyCurrency","setBuyCurrency","transactionAmount","setTransactionAmount","transactionResult","rates","state","onSubmit","onReset","onChange","target","Object","keys","map","currencyArray","min","step","required","placeholder","disabled","Container","App","ApiData","base","ratesData","setRatesData","setTimeout","fetch","then","response","ok","Error","statusText","json","catch","error","console","useApiRates","setTransactionResult","getCurrency","currency","calculateResult","saleRate","buyRate","log","getRate","toFixed","event","preventDefault","result","resultText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","breakPoint","mobileMax","document","getElementById"],"mappings":"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","file":"static/js/main.020fe3d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.642afe32.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./images/background.png\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Lato', sans-serif;\r\n        line-height: 1.5;\r\n        background-color: ${({ theme }) => theme.color.darksLateGray};\r\n        background-image: url(\"${background}\");\r\n        background-position: center;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    padding: 0 30px;\r\n    text-align: center;\r\n    color: ${({ theme }) => theme.color.babyBlue};\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n    border-radius: 10px;\r\n`;","import { HeaderWrapper } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <HeaderWrapper>\r\n    <h1>{title}</h1>\r\n  </HeaderWrapper>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\n\r\nexport const FormWrapper = styled.form`\r\n    max-width: 600px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: ${({ theme }) => theme.color.babyBlue};\r\n    border-radius: 15px; \r\n    border-style:  solid;\r\n    border-color: ${({ theme }) => theme.color.darksLateGray};\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    margin: 0 10px;\r\n    grid-template-columns: 1fr 2fr;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n        grid-gap: 0;\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    align-self: center;\r\n    height: 30px;\r\n    margin: 5px 10px;\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    align-self: center;\r\n    padding-left: 10px;\r\n    margin: 0 10px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    color: ${({ theme }) => theme.color.white};\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n`;\r\n\r\nexport const Cash = styled.input`\r\n    align-self: center;\r\n    text-align: center;\r\n    height: 30px;\r\n    margin: 0px 10px;\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.color.white};\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n\r\n    &::placeholder{\r\n        color:${({ theme }) => theme.color.white};\r\n    }\r\n`;\r\n\r\nexport const ApiStatus = styled.div`\r\n    background-color: ${({ theme }) => theme.color.frenchPass};\r\n    border: 2px inset  ${({ theme }) => theme.color.darksLateGray};\r\n    border-radius: 10px;margin: 30px;\r\n    padding: 30px;\r\n    text-align: center;\r\n    font-size: 17px;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Timer = styled.div`\r\n    text-align: right;\r\n    font-size: 13px;\r\n    font-family: 'Roboto Mono', monospace;\r\n    color: ${({ theme }) => theme.color.darksLateGray};\r\n    padding: 0 20px 10px 0;\r\n`;","import { Timer } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst parsedDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\"\r\n});\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n    \r\n    return (\r\n        <Timer>\r\n            Dzisiaj jest {\" \"} {parsedDate(date)}\r\n        </Timer>\r\n    )\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [myDate, setMyDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const clockIntervalId = setInterval(() => {\r\n            setMyDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockIntervalId);\r\n        }\r\n    }, []);\r\n\r\n    return myDate;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const FieldsetWrapper = styled.fieldset`\r\n    margin: 0px 20px 20px 20px;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.frenchPass};\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    text-align: left;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.color.white};\r\n`;","import { FieldsetWrapper, Legend } from \"./styled\";\r\n\r\nconst Fieldset = ({ title, children }) => (\r\n    <FieldsetWrapper>\r\n        <Legend>{title}</Legend>\r\n        {children}\r\n    </FieldsetWrapper>\r\n);\r\n\r\nexport default Fieldset;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 5px;\r\n    display: block;\r\n    text-align: center;\r\n`;\r\n\r\nexport const Button = styled.input`\r\n    padding: 5px 10px;\r\n    margin: 3px;\r\n    background-color: ${({ theme }) => theme.color.darksLateGray};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border-radius: 5px;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = () => (\r\n  <Wrapper>\r\n    <Button type=\"submit\" value=\"Sprzedaj!\" />\r\n    <Button type=\"reset\" value=\"Zresetuj formularz\" />\r\n  </Wrapper>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n    text-align: right;\r\n    font-size: 13px;\r\n    font-family: 'Roboto Mono', monospace;\r\n    color: ${({ theme }) => theme.color.darksLateGray};\r\n    padding-right: 20px;\r\n    margin: 10px 0 0 0;\r\n`;","import { Paragraph } from \"./styled\";\r\n\r\nconst Date = ({ date }) => (\r\n    <Paragraph>\r\n        Kursy walut pochodzą z dnia {date}.\r\n    </Paragraph>\r\n);\r\n\r\nexport default Date;","import { FormWrapper, Label, Span, Select, Option, Cash, ApiStatus } from \"./styled\";\r\nimport Clock from \"../Clock\";\r\nimport Fieldset from \"../Fieldset\";\r\nimport Buttons from \"../Buttons\";\r\nimport Date from \"../Date\";\r\n\r\nconst Form = ({\r\n    onFormSubmit,\r\n    onFormReset,\r\n    sellCurrency,\r\n    setSellCurrency,\r\n    buyCurrency,\r\n    setBuyCurrency,\r\n    transactionAmount,\r\n    setTransactionAmount,\r\n    transactionResult,\r\n    rates,\r\n    state,\r\n    date,\r\n}) => {\r\n\r\n    return (\r\n        <FormWrapper onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            <Clock />\r\n\r\n            {state === \"loading\" ? (\r\n                <ApiStatus>\r\n                    Trwa ładowanie niezbędnych informacji.\r\n                    <br/> Proszę, zaczekaj chwilę... \r\n                </ApiStatus>\r\n            ) : state === \"error\" ? (\r\n                <ApiStatus>\r\n                    Ups... coś poszło nie tak.<br/> \r\n                    Sprawdź połączenie z internetem, lub spróbuj ponownie później.\r\n                </ApiStatus>\r\n            ) : (\r\n                <>\r\n                    <Fieldset title=\"Co sprzedajesz:\">\r\n                        <Label>\r\n                            <Span>Wybierz walutę:</Span>\r\n                            <Select\r\n                                value={sellCurrency}\r\n                                onChange={({ target }) => setSellCurrency(target.value)}\r\n                            >\r\n                                {Object.keys(rates).map((currencyArray => (\r\n                                    <Option\r\n                                        key={currencyArray}\r\n                                        value={currencyArray}\r\n                                    >\r\n                                        {currencyArray}\r\n                                    </Option>\r\n                                )))}\r\n                            </Select>\r\n                        </Label>\r\n                        <Label>\r\n                            <Span>Kwota:</Span>\r\n                            <Cash\r\n                                value={transactionAmount}\r\n                                onChange={({ target }) => setTransactionAmount(target.value)}\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                step=\"0.1\"\r\n                                required\r\n                                placeholder=\"Wpisz kwotę...\"\r\n                            />\r\n                        </Label>\r\n                    </Fieldset>\r\n                    <Fieldset title=\"Co kupujesz:\">\r\n                        <Label>\r\n                            <Span>Wybierz walutę:</Span>\r\n                            <Select\r\n                                value={buyCurrency}\r\n                                onChange={({ target }) => setBuyCurrency(target.value)}\r\n                            >\r\n                                {Object.keys(rates).map((currencyArray => (\r\n                                    <Option\r\n                                        key={currencyArray}\r\n                                        value={currencyArray}\r\n                                    >\r\n                                        {currencyArray}\r\n                                    </Option>\r\n                                )))}\r\n                            </Select>\r\n                        </Label>\r\n                        <Label>\r\n                            <Span>Do wypłaty:</Span>\r\n                            <Cash\r\n                                value={transactionResult}\r\n                                disabled\r\n                            />\r\n                        </Label>\r\n                    </Fieldset>\r\n                    <Buttons />\r\n                    <Date date={date}/>\r\n                </>\r\n            )}\r\n        </FormWrapper>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1000px;\r\n    margin: 50px auto;\r\n    padding: 20px;\r\n`;","import { Wrapper} from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport { useApiRates } from \"./useApiRates\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const ApiData = useApiRates();\n\n  const [transactionAmount, setTransactionAmount] = useState(\"\");\n  const [sellCurrency, setSellCurrency] = useState(\"EUR\");\n  const [buyCurrency, setBuyCurrency] = useState(\"PLN\");\n  const [transactionResult, setTransactionResult] = useState(\"Brak\");\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const result = calculateResult(transactionAmount, sellCurrency, buyCurrency);\n    const resultText = `${result}  ${buyCurrency}`;\n    setTransactionResult(resultText);\n  };\n\n  const onFormReset = (event) => {\n    event.preventDefault();\n    setTransactionAmount(\"\");\n    setTransactionResult(\"Brak\");\n    setSellCurrency(\"EUR\");\n    setBuyCurrency(\"PLN\");\n  };\n\n  const getCurrency = (currency) => {\n    return ApiData.rates[currency];\n  };\n\n  const getRate = (sellCurrency, buyCurrency) => {\n    const saleRate = getCurrency(sellCurrency);\n    const buyRate = getCurrency(buyCurrency);\n    console.log(buyRate + \" \" + saleRate);\n    return  buyRate / saleRate ;\n  };\n\n  const calculateResult = (transactionAmount, sellCurrency, buyCurrency) => {\n    return (transactionAmount * getRate(sellCurrency, buyCurrency)).toFixed(2);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Internetowy kantor walut\" />\n      <Form\n        onFormSubmit={onFormSubmit}\n        onFormReset={onFormReset}\n        sellCurrency={sellCurrency}\n        setSellCurrency={setSellCurrency}\n        buyCurrency={buyCurrency}\n        setBuyCurrency={setBuyCurrency}\n        transactionAmount={transactionAmount}\n        setTransactionAmount={setTransactionAmount}\n        transactionResult={transactionResult}\n\n        rates={ApiData.rates}\n        state={ApiData.state}\n        date={ApiData.date}\n      />\n    </Container>\n  );\n}\n\nexport default App;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useApiRates = () => {\r\n    const [ratesData, setRatesData] = useState({ state: \"loading\", base: null, date: null, rates: null, });\r\n\r\n    useEffect(() => {\r\n        const getApi = () => {\r\n            const response = fetch(\"https://api.exchangerate.host/latest?base=PLN\");\r\n            response.then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response;\r\n            }).then((response) => response.json())\r\n                .then(({ base, date, rates,  }) => setRatesData({ base , date, rates, }))\r\n                .catch((error) => {\r\n                    setRatesData({ state: \"error\" })\r\n                    console.error(\"Sorry, something goes happened... Please try later.\", error);\r\n                });\r\n        };\r\n        setTimeout(getApi, 1000);\r\n    }, []);\r\n    return ratesData;\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./globalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        white: \"#fff\",\r\n        darksLateGray: \"#2F4F4F\",\r\n        frenchPass: \"#AAFDFD\",\r\n        babyBlue: \"#DDFFFF\",\r\n    },\r\n    breakPoint: {\r\n        mobileMax: 767,\r\n    },\r\n};"],"sourceRoot":""}
{"version":3,"sources":["UserInput/index.js","Output/index.js","Currency/index.js","Header/index.js","Prize/index.js","Buttons/index.js","Fieldset/index.js","Form/index.js","Container/index.js","Currencies/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","transactionAmount","setTransactionAmount","value","onChange","target","className","type","min","step","required","Output","transactionResult","Currency","currencies","name","sellFieldset","sellCurrency","setSellCurrency","buyCurrency","setBuyCurrency","map","currency","checked","src","image","alt","altText","id","Header","title","Prize","extraContent","Buttons","Fieldset","children","Form","onFormSubmit","onFormReset","onSubmit","onReset","Container","rate","resultText","App","useState","setTransactionResult","calculateResult","getCurrency","getRate","toFixed","find","event","preventDefault","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9959f36d.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst UserInput = ({ transactionAmount, setTransactionAmount }) => {\r\n    return (\r\n        <input\r\n            value={transactionAmount}\r\n            onChange={({ target }) => setTransactionAmount(target.value)}\r\n            className=\"cash\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            step=\"0.1\"\r\n            required\r\n        />\r\n    )\r\n};\r\n\r\nexport default UserInput;","import \"./style.css\";\r\n\r\nconst Output = ({ transactionResult }) => (\r\n    <span className=\"output\">{transactionResult}</span>\r\n);\r\n\r\nexport default Output;","import \"./style.css\";\r\n\r\nconst Currency = ({ currencies, name, sellFieldset, sellCurrency, setSellCurrency, buyCurrency, setBuyCurrency }) => (\r\n  <ul className=\"currency\">\r\n    {currencies.map(currency => (\r\n      <li key={currency.id} className=\"currency__item\">\r\n        <label className=\"currency__label\">\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            value={sellCurrency}\r\n            className=\"currency__input\"\r\n            required\r\n            checked={currency.name === (sellFieldset ? sellCurrency : buyCurrency)}\r\n            onChange={() => (sellFieldset ? setSellCurrency : setBuyCurrency)(currency.name)}\r\n          />\r\n          <span className=\"currency__radioText\">{currency.name}</span>\r\n          <img\r\n            className=\"currency__image\"\r\n            src={currency.image}\r\n            alt={currency.altText}\r\n          />\r\n        </label>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Currency;","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header className=\"header\">\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Prize = ({ title, extraContent }) => (\r\n    <label className=\"prize\">\r\n        <span className=\"prize__text\">{title}</span>\r\n        {extraContent}\r\n    </label>\r\n);\r\n\r\nexport default Prize;","import \"./style.css\";\r\n\r\nconst Buttons = () => (\r\n  <div className=\"buttons\">\r\n    <input type=\"submit\" className=\"buttons__button\" value=\"Sprzedaj!\" />\r\n    <input type=\"reset\" className=\"buttons__button\" value=\"Zresetuj formularz\" />\r\n  </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Fieldset = ({ title, children }) => (\r\n    <fieldset className=\"fieldset\">\r\n        <legend className=\"fieldset__legend\">{title}</legend>\r\n        {children}\r\n    </fieldset>\r\n);\r\n\r\nexport default Fieldset;","import \"./style.css\";\r\n\r\nconst Form = ({ children, onFormSubmit, onFormReset }) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\r\n            {children}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","const currencies = [\r\n  {\r\n    id: 1,\r\n    name: \"Złoty\",\r\n    image: \"https://i.postimg.cc/6QY6tWdx/pln.png\",\r\n    altText: \"flaga Polski\",\r\n    rate: 1,\r\n    resultText: \"PLN\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Euro\",\r\n    image: \"https://i.postimg.cc/ht0QQq9p/euro.jpg\",\r\n    altText: \"flaga Europy\",\r\n    rate: 4.54,\r\n    resultText: \"EUR\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Dolar\",\r\n    image: \"https://i.postimg.cc/sXbMCfrD/usd.png\",\r\n    altText: \"flaga Stanów Zjednoczonych\",\r\n    rate: 3.79,\r\n    resultText: \"USD\",\r\n  },\r\n];\r\n\r\nexport default currencies;","import { useState } from \"react\";\nimport UserInput from \"./UserInput\";\nimport Output from \"./Output\";\nimport Currency from \"./Currency\";\nimport Header from \"./Header\";\nimport Prize from \"./Prize\";\nimport Buttons from \"./Buttons\";\nimport Fieldset from \"./Fieldset\";\nimport Form from \"./Form\";\nimport Container from \"./Container\";\nimport currencies from \"./Currencies\";\n\nfunction App() {\n  const [transactionAmount, setTransactionAmount] = useState(\"\");\n  const [sellCurrency, setSellCurrency] = useState(\"Euro\");\n  const [buyCurrency, setBuyCurrency] = useState(\"Złoty\");\n  const [transactionResult, setTransactionResult] = useState(\"Brak\");\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const result = calculateResult(transactionAmount, sellCurrency, buyCurrency);\n    setTransactionResult(`${result} ${getCurrency(buyCurrency).resultText}`);\n  };\n\n  const onFormReset = (event) => {\n    event.preventDefault();\n    setTransactionAmount(\"\");\n    setTransactionResult(\"Brak\");\n    setSellCurrency(\"\");\n    setBuyCurrency(\"\");\n  };\n\n  const getRate = (sellCurrency, buyCurrency) => {\n    const saleRate = getCurrency(sellCurrency).rate;\n    const buyRate = getCurrency(buyCurrency).rate;\n    return saleRate / buyRate;\n  };\n\n  const calculateResult = (transactionAmount, sellCurrency, buyCurrency) => {\n    return (transactionAmount * getRate(sellCurrency, buyCurrency)).toFixed(2);\n  };\n\n  const getCurrency = (currency) => {\n    return currencies.find(({ name }) => name === currency)\n  };\n\n  return (\n    <Container>\n      <Header title=\"Internetowy kantor walut\" />\n      <Form onFormSubmit={onFormSubmit} onFormReset={onFormReset}>\n        <Fieldset title=\"Co sprzedajesz:\">\n          <Currency\n            currencies={currencies}\n            name=\"sell\"\n            sellFieldset={true}\n            sellCurrency={sellCurrency}\n            setSellCurrency={setSellCurrency}\n            buyCurrency={buyCurrency}\n            setBuyCurrency={setBuyCurrency}\n          />\n          <Prize\n            title=\"Kwota:\"\n            extraContent={<UserInput transactionAmount={transactionAmount} setTransactionAmount={setTransactionAmount} />}\n          />\n        </Fieldset>\n        <Fieldset title=\"Co kupujesz:\">\n          <Currency\n            currencies={currencies}\n            name=\"buy\"\n            sellFieldset={false}\n            sellCurrency={sellCurrency}\n            setSellCurrency={setSellCurrency}\n            buyCurrency={buyCurrency}\n            setBuyCurrency={setBuyCurrency}\n          />\n          <Prize title=\"Do wypłaty:\" extraContent={<Output transactionResult={transactionResult} />} />\n        </Fieldset>\n        <Buttons />\n      </Form>\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}